@model IEnumerable<WorkTaskTableVM>
@{
    ViewData["Title"] = "Home";
}

<div style="margin-top:90px; margin-bottom: 40px;">
    <h1>Welcome @ViewData["UserDisplayName"] to the TaskManager MinimalApp</h1>
</div>
<div class="table-responsive-sm">
    <div style="display:flex; flex-direction:row-reverse">
        <a class="btn btn-primary">Create task</a>
    </div>
    <div style="margin-block: 15px; display:flex; flex-direction:row; justify-content:space-between; align-items:center">
        <div style="display:flex; flex-direction:row; align-items:center">
            <p style="margin-right:10px; margin-bottom: 0px;"><strong>Filtering:</strong></p>
            <p style="margin-right:10px; margin-bottom: 0px;">By&nbsp;Username:</p>
            <select class="form-select" style="margin-right:20px;">
                <option selected>Not</option>
                @foreach (var user in ViewData["AllUsers"] as IEnumerable<UserVM>)
                {
                    <option value="@user.Id">@user.UserName</option>
                }
            </select>
            <p style="margin-right:10px; margin-bottom: 0px;">By&nbsp;Status:</p>
            <select class="form-select" style="margin-right:20px;">
                <option selected>Not</option>
                @foreach (var status in ViewData["AllStatuses"] as IEnumerable<WorkTaskStatusVM>)
                {
                    <option value="@status.Id">@status.Name</option>
                }
            </select>
        </div>
        <div style="display:flex; flex-direction:row; align-items:center">
            <p style="margin-right:10px; margin-bottom: 0px;"><strong>Sorting:</strong></p>
            <select class="form-select">
                <option selected value="0">Newer</option>
                <option value="1">Older</option>
            </select>
        </div>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Status</th>
                <th scope="col">Author</th>
                <th scope="col">Created</th>
                <th scope="col">Closed</th>
                <th scope="col">WorkHours</th>
            </tr>
        </thead>
        <tbody>
            @{
                await Html.RenderPartialAsync("_TableRows", Model);
            }
        </tbody>
    </table>
</div>


@section Scripts {
    @* <script>
        window.addEventListener('htmx:beforeRequest', (e) => {
            let urlObj = new URL(window.location.href);
            let page = urlObj.searchParams.get('page');

            if (page) {
                page = parseInt(page) + 1;
                urlObj.searchParams.set('page', page);
            } else {
                urlObj.searchParams.set('page', 2);
            }
            //debugger;
            window.history.pushState({}, '', urlObj.toString());
            let query = "/?" + urlObj.searchParams.toString();
            e.detail.elt.setAttribute('hx-get', query);
            console.log(e.detail.elt);
        });

    </script> *@
    <script>
        function dynamicLoadingParameters(el) {
            let urlObj = new URL(window.location.href);
            let page = urlObj.searchParams.get('page');

            if (page) {
                page = parseInt(page) + 1;
                urlObj.searchParams.set('page', page);
            } else {
                urlObj.searchParams.set('page', 2);
            }

            let query = "/?" + urlObj.searchParams.toString();
            console.log(query);

            el.setAttribute('hx-get', query);
            window.history.pushState({}, '', urlObj.toString());
        }
    </script>
}
